/**
 * @logue/reverb
 *
 * @description JavaScript Reverb effect class
 * @author Logue <logue@hotmail.co.jp>
 * @copyright 2019-2022 By Masashi Yoshikawa All rights reserved.
 * @license MIT
 * @version 1.0.0
 * @see {@link https://github.com/logue/Reverb.js}
 */

(function(h,l){typeof exports=="object"&&typeof module<"u"?module.exports=l():typeof define=="function"&&define.amd?define(l):(h=typeof globalThis<"u"?globalThis:h||self,h.Reverb=l())})(this,function(){"use strict";const h={version:"1.0.0",date:"2022-08-29T12:27:54.864Z"},l={BLUE:"blue",GREEN:"green",PINK:"pink",RED:"red",VIOLET:"violet",WHITE:"white"},I=(t,e)=>t!=null&&typeof t[e]=="function",T=t=>I(t,"xform")?t.xform():t,G=t=>t!=null&&typeof t[Symbol.iterator]=="function";class f{constructor(e){this.value=e}deref(){return this.value}}const x=t=>new f(t),F=t=>t instanceof f,k=t=>t instanceof f?t:new f(t),w=t=>t instanceof f?t.deref():t,C=(t,e)=>[t,i=>i,e];function j(t){return t?[...t]:C(()=>[],(e,i)=>(e.push(i),e))}function*D(t,e){const i=T(t)(j()),s=i[1],r=i[2];for(let o of e){const n=r([],o);if(F(n)){yield*w(s(n.deref()));return}n.length&&(yield*n)}yield*w(s([]))}const q=(t,e)=>[t[0],t[1],e];function p(t,e){return G(e)?D(p(t),e):i=>{const s=i[2];let r=t;return q(i,(o,n)=>--r>0?s(o,n):r===0?k(s(o,n)):x(o))}}const N=1/2**32;class L{float(e=1){return this.int()*N*e}norm(e=1){return(this.int()*N-.5)*2*e}minmax(e,i){return this.float()*(i-e)+e}minmaxInt(e,i){return e|=0,i|=0,e+(this.float()*(i-e)|0)}}const m=Math.random;class S extends L{int(){return m()*4294967296>>>0}float(e=1){return m()*e}norm(e=1){return(m()-.5)*2*e}}const u=new S,v=(t,e,i)=>{const s=new Array(t);for(let r=0;r<t;r++)s[r]=i.norm(e);return s},y=t=>t.reduce((e,i)=>e+i,0);function*_(t,e){const i=[t[Symbol.iterator](),e[Symbol.iterator]()];for(let s=0;;s^=1){const r=i[s].next();if(r.done)return;yield r.value}}function*b(t=2,e=1,i=u){const s=v(t,e,i);s.forEach((n,a)=>s[a]=a&1?n:-n);const r=1/t;let o=y(s);for(let n=0,a=-1;;++n>=t&&(n=0))o-=s[n],o+=s[n]=a*i.norm(e),a^=4294967294,yield a*o*r}const A=(t=2,e=1,i=u)=>_(b(t,e,i),b(t,e,i)),B=t=>{let e=32;return t&=-t,t&&e--,t&65535&&(e-=16),t&16711935&&(e-=8),t&252645135&&(e-=4),t&858993459&&(e-=2),t&1431655765&&(e-=1),e};function*Q(t=8,e=1,i=u){const s=v(t,e,i),r=1/t;let o=y(s);for(let n=0;;n=n+1>>>0){const a=B(n)%t;o-=s[a],o+=s[a]=i.norm(e),yield o*r}}function*R(t=2,e=1,i=u){const s=v(t,e,i),r=1/t;let o=y(s);for(let n=0;;++n>=t&&(n=0))o-=s[n],o+=s[n]=i.norm(e),yield o*r}const W=(t=2,e=1,i=u)=>_(R(t,e,i),R(t,e,i));function*g(t=1,e=u){for(;;)yield e.norm(t)}class E{constructor(e,i){this.noise=g,this.version=h.version,this.build=h.date,this.ctx=e,this._options={...M,...i},this.wetGainNode=this.ctx.createGain(),this.dryGainNode=this.ctx.createGain(),this.filterNode=this.ctx.createBiquadFilter(),this.convolverNode=this.ctx.createConvolver(),this.outputNode=this.ctx.createGain(),this.isConnected=!1,this.setNoise(l.WHITE),this.buildImpulse(),this.mix(this._options.mix)}connect(e){return this.isConnected&&this._options.once?(this.isConnected=!1,this.outputNode):(this.convolverNode.connect(this.filterNode),this.filterNode.connect(this.wetGainNode),e.connect(this.convolverNode),e.connect(this.dryGainNode).connect(this.outputNode),e.connect(this.wetGainNode).connect(this.outputNode),this.isConnected=!0,this.outputNode)}disconnect(e){return this.isConnected&&(this.convolverNode.disconnect(this.filterNode),this.filterNode.disconnect(this.wetGainNode)),this.isConnected=!1,e}mix(e){if(!this.inRange(e,0,1))throw new RangeError("Reverb.js: Dry/Wet ratio must be between 0 to 1.");this._options.mix=e,this.dryGainNode.gain.value=1-this._options.mix,this.wetGainNode.gain.value=this._options.mix}time(e){if(!this.inRange(e,1,50))throw new RangeError("Reverb.js: Time length of inpulse response must be less than 50sec.");this._options.time=e,this.buildImpulse()}decay(e){if(!this.inRange(e,0,100))throw new RangeError("Reverb.js: Inpulse Response decay level must be less than 100.");this._options.decay=e,this.buildImpulse()}delay(e){if(!this.inRange(e,0,100))throw new RangeError("Reverb.js: Inpulse Response delay time must be less than 100.");this._options.delay=e,this.buildImpulse()}reverse(e){this._options.reverse=e,this.buildImpulse()}filterType(e){this.filterNode.type=this._options.filterType=e}filterFreq(e){if(!this.inRange(e,20,5e3))throw new RangeError("Reverb.js: Filter frequrncy must be between 20 and 5000.");this._options.filterFreq=e,this.filterNode.frequency.value=this._options.filterFreq}filterQ(e){if(!this.inRange(e,0,10))throw new RangeError("Reverb.js: Filter quality value must be between 0 and 10.");this._options.filterQ=e,this.filterNode.Q.value=this._options.filterQ}setNoise(e){switch(this._options.noise=e,e){case l.BLUE:this.noise=b;break;case l.GREEN:this.noise=A;break;case l.PINK:this.noise=Q;break;case l.RED:case l.BROWN:this.noise=R;break;case l.VIOLET:this.noise=W;break;default:this.noise=g;break}this.buildImpulse()}inRange(e,i,s){return(e-i)*(e-s)<=0}buildImpulse(){const e=this.ctx.sampleRate,i=Math.max(e*this._options.time,1),s=e*this._options.delay,r=this.ctx.createBuffer(2,i,e),o=new Float32Array(i),n=new Float32Array(i),a=[...p(i,this.noise(1))],H=[...p(i,this.noise(1))];for(let c=0;c<i;c++){let d=0;c<s?(o[c]=0,n[c]=0,d=this._options.reverse?i-(c-s):c-s):d=this._options.reverse?i-c:c,o[c]=1+a[c]*this._options.power,n[c]=1+H[c]*this._options.power,o[c]*=(1-d/i)**this._options.decay,n[c]*=(1-d/i)**this._options.decay}r.getChannelData(0).set(o),r.getChannelData(1).set(n),this.convolverNode.buffer=r}}const M={noise:l.WHITE,power:2,decay:2,delay:0,reverse:!1,time:2,filterType:"lowpass",filterFreq:2200,filterQ:1,mix:.5,once:!1};return window.Reverb||(window.Reverb=E),E});
