{"version":3,"sources":["webpack://Reverb/webpack/universalModuleDefinition","webpack://Reverb/webpack/bootstrap","webpack://Reverb/./src/Meta.ts","webpack://Reverb/./src/Reverb.ts"],"names":[],"mappings":"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","file":"reverb.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Reverb\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Reverb\"] = factory();\n\telse\n\t\troot[\"Reverb\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/Reverb.ts\");\n","import MetaInterface from './interfaces/MetaInterface';\n\n// This file is auto-generated by the build system.\nconst meta: MetaInterface = {\n  version: '0.3.0',\n  date: '2020-11-05T06:43:34.965Z',\n};\nexport default meta;\n","import Meta from './Meta';\nimport OptionInterface from './interfaces/OptionInterface';\n\n/**\n * JS reverb effect class\n *\n * @author    Logue <logue@hotmail.co.jp>\n * @copyright 2019-2020 Masashi Yoshikawa <https://logue.dev/> All rights reserved.\n * @license   MIT\n * @see       {@link https://github.com/logue/Reverb.js}\n *            {@link https://github.com/web-audio-components/simple-reverb}\n */\nexport default class Reverb {\n  /** @type {string} バージョン */\n  public readonly version: string;\n  /** @type {string} ビルド日時 */\n  public readonly build: string;\n  /** @type {AudioContext} AudioContext */\n  private readonly ctx: AudioContext;\n  /** @type {GainNode} ウェットレベル（エフェクターをかけたレベル） */\n  private readonly wetGainNode: GainNode;\n  /** @type {GainNode} ドライレベル（原音レベル） */\n  private readonly dryGainNode: GainNode;\n  /** @type {BiquadFilterNode} インパルス応答用フィルタ */\n  private readonly filterNode: BiquadFilterNode;\n  /** @type {ConvolverNode} 畳み込みノード */\n  private readonly convolverNode: ConvolverNode;\n  /** @type {GainNode} 出力ノード */\n  private readonly outputNode: GainNode;\n  /** @type {Option} 変数 */\n  private readonly _options: OptionInterface;\n  /** @type {boolean} 接続済みフラグ */\n  private isConnected: boolean;\n\n  /**\n   * constructor\n   * @param {AudioContext} ctx Root AudioContext\n   * @param {OptionInterface} options Configure\n   */\n  constructor(ctx: AudioContext, options: OptionInterface | null) {\n    // バージョン情報など\n    this.version = Meta.version;\n    this.build = Meta.date;\n    // マスターのAudioContextを取得\n    this.ctx = ctx;\n    // デフォルト値をマージ\n    this._options = {...optionDefaults, ...options} as const;\n    // 初期化\n    this.wetGainNode = this.ctx.createGain();\n    this.dryGainNode = this.ctx.createGain();\n    this.filterNode = this.ctx.createBiquadFilter();\n    this.convolverNode = this.ctx.createConvolver();\n    this.outputNode = this.ctx.createGain();\n    // 接続済みフラグを落とす\n    this.isConnected = false;\n    // インパルス応答を生成\n    this.buildImpulse();\n  }\n\n  /**\n   * connect\n   * @param {AudioNode} sourceNode 原音ノード\n   * @return {AudioNode}\n   */\n  public connect(sourceNode: AudioNode): AudioNode {\n    // 畳み込みノードをウェットレベルに接続\n    this.convolverNode.connect(this.filterNode);\n    // フィルタノードをウェットレベルに接続\n    this.filterNode.connect(this.wetGainNode);\n    // 入力ノードを畳み込みノードに接続\n    sourceNode.connect(this.convolverNode);\n    // ドライレベルを出力ノードに接続\n    sourceNode.connect(this.dryGainNode).connect(this.outputNode);\n    // ウェットレベルを出力ノードに接続\n    sourceNode.connect(this.wetGainNode).connect(this.outputNode);\n    // 接続済みフラグを立てる\n    this.isConnected = true;\n\n    return this.outputNode;\n  }\n\n  /**\n   * disconnect\n   * @param {AudioNode} sourceNode 原音のノード\n   * @return {AudioNode}\n   */\n  public disconnect(sourceNode: AudioNode | null): AudioNode | null {\n    // 初期状態ではノードがつながっていないためエラーになる\n    if (this.isConnected) {\n      // 畳み込みノードをウェットレベルから切断\n      this.convolverNode.disconnect(this.filterNode);\n      // フィルタノードをウェットレベルから切断\n      this.filterNode.disconnect(this.wetGainNode);\n    }\n    // 接続済みフラグを解除\n    this.isConnected = false;\n\n    // そのままノードを返す（他のAPIに似せるため）\n    return sourceNode;\n  }\n\n  /**\n   * Dry/Wet ratio\n   * @param {number} mix\n   */\n  public mix(mix: number) {\n    if (!this.inRange(mix, 0, 1)) {\n      throw new RangeError('Reverb.js: Dry/Wet ratio must be between 0 to 1.');\n    }\n    this._options.mix = mix;\n    this.dryGainNode.gain.value = 1 - this._options.mix;\n    this.wetGainNode.gain.value = this._options.mix;\n    console.debug(`Reverb.js: Set dry/wet ratio to ${mix * 100}%`);\n  }\n\n  /**\n   * Set Impulse Response time length (second)\n   * @param {number} value\n   */\n  public time(value: number) {\n    if (!this.inRange(value, 1, 50)) {\n      throw new RangeError(\n        'Reverb.js: Time length of inpulse response must be less than 50sec.'\n      );\n    }\n    this._options.time = value;\n    this.buildImpulse();\n    console.info(`Reverb.js: Set inpulse response time length to ${value}sec.`);\n  }\n\n  /**\n   * Impulse response decay rate.\n   * @param {number} value\n   */\n  public decay(value: number) {\n    if (!this.inRange(value, 0, 100)) {\n      throw new RangeError(\n        'Reverb.js: Inpulse Response decay level must be less than 100.'\n      );\n    }\n    this._options.decay = value;\n    this.buildImpulse();\n    console.debug(`Reverb.js: Set inpulse response decay level to ${value}.`);\n  }\n\n  /**\n   * Impulse response delay time. (NOT deley effect)\n   * @param {number} value\n   */\n  public delay(value: number) {\n    if (!this.inRange(value, 0, 100)) {\n      throw new RangeError(\n        'Reverb.js: Inpulse Response delay time must be less than 100.'\n      );\n    }\n    this._options.delay = value;\n    this.buildImpulse();\n    console.debug(`Reverb.js: Set inpulse response delay time to ${value}sec.`);\n  }\n\n  /**\n   * Reverse the impulse response.\n   * @param {boolean} reverse\n   */\n  public reverse(reverse: boolean) {\n    this._options.reverse = reverse;\n    this.buildImpulse();\n    console.debug(\n      `Reverb.js: Inpulse response is ${reverse ? '' : 'not '}reversed.`\n    );\n  }\n\n  /**\n   * Filter type.\n   * @param {BiquadFilterType} type\n   */\n  public filterType(type: BiquadFilterType) {\n    this.filterNode.type = this._options.filterType = type;\n    console.debug(`Set filter type to ${type}`);\n  }\n\n  /**\n   * Filter frequency.\n   * @param {number} freq\n   */\n  public filterFreq(freq: number) {\n    if (!this.inRange(freq, 20, 5000)) {\n      throw new RangeError(\n        'Reverb.js: Filter frequrncy must be between 20 and 5000.'\n      );\n    }\n    this._options.filterFreq = freq;\n    this.filterNode.frequency.value = this._options.filterFreq;\n    console.debug(`Set filter frequency to ${freq}Hz.`);\n  }\n\n  /**\n   * Filter quality.\n   * @param {number} q\n   */\n  public filterQ(q: number) {\n    if (!this.inRange(q, 0, 10)) {\n      throw new RangeError(\n        'Reverb.js: Filter quality value must be between 0 and 10.'\n      );\n    }\n    this._options.filterQ = q;\n    this.filterNode.Q.value = this._options.filterQ;\n    console.debug(`Set filter quality to ${q}.`);\n  }\n\n  /**\n   * return true if in range, otherwise false\n   * @private\n   * @param {number} x Target value\n   * @param {number} min Minimum value\n   * @param {number} max Maximum value\n   * @return {bool}\n   */\n  private inRange(x: number, min: number, max: number) {\n    return (x - min) * (x - max) <= 0;\n  }\n\n  /**\n   * Utility function for building an impulse response\n   * from the module parameters.\n   * @private\n   */\n  private buildImpulse() {\n    // インパルス応答生成ロジック\n\n    /** @type {number} サンプリングレート */\n    const rate: number = this.ctx.sampleRate;\n    /** @type {number} インパルス応答の演奏時間 */\n    const length: number = Math.max(rate * this._options.time, 1);\n    /** @type {number} インパルス応答が始まるまでの遅延時間 */\n    const delayDuration: number = rate * this._options.delay;\n    /** @type {AudioBuffer} インパルス応答バッファ（今の所ステレオのみ） */\n    const impulse: AudioBuffer = this.ctx.createBuffer(2, length, rate);\n    /** @type {Array<number>|ArrayBufferView} 左チャンネル */\n    const impulseL: Float32Array = new Float32Array(length);\n    /** @type {Array<number>|ArrayBufferView} 右チャンネル*/\n    const impulseR: Float32Array = new Float32Array(length);\n\n    for (let i = 0; i < length; i++) {\n      /** @type {number} 減衰率 */\n      let n = 0;\n\n      if (i < delayDuration) {\n        // Delay Effect\n        impulseL[i] = 0;\n        impulseR[i] = 0;\n        n = this._options.reverse\n          ? length - (i - delayDuration)\n          : i - delayDuration;\n      } else {\n        n = this._options.reverse ? length - i : i;\n      }\n\n      /** @type {number} 平方根を利用した減衰曲線 */\n      const pow: number = (1 - n / length) ** this._options.decay;\n      impulseL[i] = this.getNoise(pow);\n      impulseR[i] = this.getNoise(pow);\n    }\n\n    // インパルス応答のバッファに生成したWaveTableを代入\n    impulse.getChannelData(0).set(impulseL);\n    impulse.getChannelData(1).set(impulseR);\n\n    this.convolverNode.buffer = impulse;\n  }\n  /**\n   * Generate white noise\n   * @param {number} rate Attenuation rate\n   * @return {number}\n   * @private\n   */\n  private getNoise(rate: number): number {\n    // TODO: 他のカラードノイズを指定できるように\n    return (Math.random() * 2 - 1) * rate;\n  }\n}\n\n/**\n * デフォルト値\n */\nconst optionDefaults: OptionInterface = {\n  decay: 5,\n  delay: 0,\n  reverse: false,\n  time: 3,\n  filterType: 'lowpass',\n  filterFreq: 2200,\n  filterQ: 1,\n  mix: 0.5,\n};\n"],"sourceRoot":""}