{"version":3,"sources":["webpack://Reverb/webpack/universalModuleDefinition","webpack://Reverb/./src/Meta.ts","webpack://Reverb/./src/NoiseType.ts","webpack://Reverb/./src/Reverb.ts","webpack://Reverb/webpack/bootstrap","webpack://Reverb/webpack/startup"],"names":[],"mappings":"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","file":"reverb.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Reverb\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Reverb\"] = factory();\n\telse\n\t\troot[\"Reverb\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn ","import MetaInterface from './interfaces/MetaInterface';\n\n// This file is auto-generated by the build system.\nconst meta: MetaInterface = {\n  version: '0.4.2',\n  date: '2021-07-04T08:12:21.950Z',\n};\nexport default meta;\n","export enum NoiseType {\n  WHITE,\n  PINK,\n  BROWN,\n}\n","import Meta from './Meta';\nimport OptionInterface from './interfaces/OptionInterface';\nimport {NoiseType} from './NoiseType';\n\n/**\n * JS reverb effect class\n *\n * @author    Logue <logue@hotmail.co.jp>\n * @copyright 2019-2021 Masashi Yoshikawa <https://logue.dev/> All rights reserved.\n * @license   MIT\n * @see       {@link https://github.com/logue/Reverb.js}\n *            {@link https://github.com/web-audio-components/simple-reverb}\n */\nexport default class Reverb {\n  /** バージョン */\n  public readonly version: string;\n  /** ビルド日時 */\n  public readonly build: string;\n  /** AudioContext */\n  private readonly ctx: AudioContext;\n  /** ウェットレベル（エフェクターをかけたレベル） */\n  private readonly wetGainNode: GainNode;\n  /** ドライレベル（原音レベル） */\n  private readonly dryGainNode: GainNode;\n  /** インパルス応答用フィルタ */\n  private readonly filterNode: BiquadFilterNode;\n  /** 畳み込みノード */\n  private readonly convolverNode: ConvolverNode;\n  /** 出力ノード */\n  private readonly outputNode: GainNode;\n  /** 変数 */\n  private readonly _options: OptionInterface;\n  /** 接続済みフラグ */\n  private isConnected: boolean;\n\n  /**\n   * constructor\n   * @param ctx Root AudioContext\n   * @param options Configure\n   */\n  constructor(ctx: AudioContext, options: OptionInterface | undefined) {\n    // バージョン情報など\n    this.version = Meta.version;\n    this.build = Meta.date;\n    // マスターのAudioContextを取得\n    this.ctx = ctx;\n    // デフォルト値をマージ\n    this._options = {...optionDefaults, ...options} as const;\n    // 初期化\n    this.wetGainNode = this.ctx.createGain();\n    this.dryGainNode = this.ctx.createGain();\n    this.filterNode = this.ctx.createBiquadFilter();\n    this.convolverNode = this.ctx.createConvolver();\n    this.outputNode = this.ctx.createGain();\n    // 接続済みフラグを落とす\n    this.isConnected = false;\n    // インパルス応答を生成\n    this.buildImpulse();\n  }\n\n  /**\n   * connect\n   * @param sourceNode 原音ノード\n   */\n  public connect(sourceNode: AudioNode): AudioNode {\n    // 畳み込みノードをウェットレベルに接続\n    this.convolverNode.connect(this.filterNode);\n    // フィルタノードをウェットレベルに接続\n    this.filterNode.connect(this.wetGainNode);\n    // 入力ノードを畳み込みノードに接続\n    sourceNode.connect(this.convolverNode);\n    // ドライレベルを出力ノードに接続\n    sourceNode.connect(this.dryGainNode).connect(this.outputNode);\n    // ウェットレベルを出力ノードに接続\n    sourceNode.connect(this.wetGainNode).connect(this.outputNode);\n    // 接続済みフラグを立てる\n    this.isConnected = true;\n\n    return this.outputNode;\n  }\n\n  /**\n   * disconnect\n   * @param sourceNode 原音のノード\n   */\n  public disconnect(sourceNode: AudioNode | undefined): AudioNode | undefined {\n    // 初期状態ではノードがつながっていないためエラーになる\n    if (this.isConnected) {\n      // 畳み込みノードをウェットレベルから切断\n      this.convolverNode.disconnect(this.filterNode);\n      // フィルタノードをウェットレベルから切断\n      this.filterNode.disconnect(this.wetGainNode);\n    }\n    // 接続済みフラグを解除\n    this.isConnected = false;\n\n    // そのままノードを返す（他のAPIに似せるため）\n    return sourceNode;\n  }\n\n  /**\n   * Dry/Wet ratio\n   * @param mix\n   */\n  public mix(mix: number): void {\n    if (!this.inRange(mix, 0, 1)) {\n      throw new RangeError('Reverb.js: Dry/Wet ratio must be between 0 to 1.');\n    }\n    this._options.mix = mix;\n    this.dryGainNode.gain.value = 1 - this._options.mix;\n    this.wetGainNode.gain.value = this._options.mix;\n    console.debug(`Reverb.js: Set dry/wet ratio to ${mix * 100}%`);\n  }\n\n  /**\n   * Set Impulse Response time length (second)\n   * @param value\n   */\n  public time(value: number): void {\n    if (!this.inRange(value, 1, 50)) {\n      throw new RangeError(\n        'Reverb.js: Time length of inpulse response must be less than 50sec.'\n      );\n    }\n    this._options.time = value;\n    this.buildImpulse();\n    console.info(`Reverb.js: Set inpulse response time length to ${value}sec.`);\n  }\n\n  /**\n   * Impulse response decay rate.\n   * @param value\n   */\n  public decay(value: number): void {\n    if (!this.inRange(value, 0, 100)) {\n      throw new RangeError(\n        'Reverb.js: Inpulse Response decay level must be less than 100.'\n      );\n    }\n    this._options.decay = value;\n    this.buildImpulse();\n    console.debug(`Reverb.js: Set inpulse response decay level to ${value}.`);\n  }\n\n  /**\n   * Impulse response delay time. (NOT deley effect)\n   * @param value\n   */\n  public delay(value: number): void {\n    if (!this.inRange(value, 0, 100)) {\n      throw new RangeError(\n        'Reverb.js: Inpulse Response delay time must be less than 100.'\n      );\n    }\n    this._options.delay = value;\n    this.buildImpulse();\n    console.debug(`Reverb.js: Set inpulse response delay time to ${value}sec.`);\n  }\n\n  /**\n   * Reverse the impulse response.\n   * @param reverse\n   */\n  public reverse(reverse: boolean): void {\n    this._options.reverse = reverse;\n    this.buildImpulse();\n    console.debug(\n      `Reverb.js: Inpulse response is ${reverse ? '' : 'not '}reversed.`\n    );\n  }\n\n  /**\n   * Filter type.\n   * @param type\n   */\n  public filterType(type: BiquadFilterType): void {\n    this.filterNode.type = this._options.filterType = type;\n    console.debug(`Set filter type to ${type}`);\n  }\n\n  /**\n   * Filter frequency.\n   * @param freq\n   */\n  public filterFreq(freq: number): void {\n    if (!this.inRange(freq, 20, 5000)) {\n      throw new RangeError(\n        'Reverb.js: Filter frequrncy must be between 20 and 5000.'\n      );\n    }\n    this._options.filterFreq = freq;\n    this.filterNode.frequency.value = this._options.filterFreq;\n    console.debug(`Set filter frequency to ${freq}Hz.`);\n  }\n\n  /**\n   * Filter quality.\n   * @param q\n   */\n  public filterQ(q: number): void {\n    if (!this.inRange(q, 0, 10)) {\n      throw new RangeError(\n        'Reverb.js: Filter quality value must be between 0 and 10.'\n      );\n    }\n    this._options.filterQ = q;\n    this.filterNode.Q.value = this._options.filterQ;\n    console.debug(`Set filter quality to ${q}.`);\n  }\n\n  /**\n   * Inpulse Response Noise algorithm.\n   * @param type\n   */\n  public setNoise(type: NoiseType) {\n    this._options.noise = type;\n    this.buildImpulse();\n    console.debug(`Set Noise type to ${type}.`);\n  }\n\n  /**\n   * return true if in range, otherwise false\n   * @private\n   * @param x Target value\n   * @param min Minimum value\n   * @param max Maximum value\n   * @return\n   */\n  private inRange(x: number, min: number, max: number): boolean {\n    return (x - min) * (x - max) <= 0;\n  }\n\n  /**\n   * Utility function for building an impulse response\n   * from the module parameters.\n   * @private\n   */\n  private buildImpulse(): void {\n    // インパルス応答生成ロジック\n\n    /** サンプリングレート */\n    const rate: number = this.ctx.sampleRate;\n    /** インパルス応答の演奏時間 */\n    const duration: number = Math.max(rate * this._options.time, 1);\n    /** インパルス応答が始まるまでの遅延時間 */\n    const delayDuration: number = rate * this._options.delay;\n    /** インパルス応答バッファ（今の所ステレオのみ） */\n    const impulse: AudioBuffer = this.ctx.createBuffer(2, duration, rate);\n    /** 左チャンネル */\n    const impulseL: Float32Array = new Float32Array(duration);\n    /** 右チャンネル*/\n    const impulseR: Float32Array = new Float32Array(duration);\n\n    /** 一時計算用 */\n    const b = [0, 0, 0, 0, 0, 0, 0];\n\n    for (let i = 0; i < duration; i++) {\n      /** @type {number} 減衰率 */\n      let n = 0;\n\n      if (i < delayDuration) {\n        // Delay Effect\n        impulseL[i] = 0;\n        impulseR[i] = 0;\n        n = this._options.reverse\n          ? duration - (i - delayDuration)\n          : i - delayDuration;\n      } else {\n        n = this._options.reverse ? duration - i : i;\n      }\n\n      switch (this._options.noise) {\n        default:\n        case NoiseType.WHITE:\n          // White Noise\n          impulseL[i] = Reverb.whiteNoise();\n          impulseR[i] = Reverb.whiteNoise();\n          break;\n        case NoiseType.PINK:\n          // ピンクノイズ生成処理\n          // http://noisehack.com/generate-noise-web-audio-api/\n          b[0] = 0.99886 * b[0] + Reverb.whiteNoise() * 0.0555179;\n          b[1] = 0.99332 * b[1] + Reverb.whiteNoise() * 0.0750759;\n          b[2] = 0.969 * b[2] + Reverb.whiteNoise() * 0.153852;\n          b[3] = 0.8665 * b[3] + Reverb.whiteNoise() * 0.3104856;\n          b[4] = 0.55 * b[4] + Reverb.whiteNoise() * 0.5329522;\n          b[5] = -0.7616 * b[5] - Reverb.whiteNoise() * 0.016898;\n\n          impulseL[i] =\n            b[0] +\n            b[1] +\n            b[2] +\n            b[3] +\n            b[4] +\n            b[5] +\n            b[6] +\n            Reverb.whiteNoise() * 0.5362;\n\n          impulseR[i] =\n            b[0] +\n            b[1] +\n            b[2] +\n            b[3] +\n            b[4] +\n            b[5] +\n            b[6] +\n            Reverb.whiteNoise() * 0.5362;\n\n          // ゲイン補償処理\n          impulseL[i] *= 0.11;\n          impulseR[i] *= 0.11;\n\n          b[6] = Reverb.whiteNoise() * 0.115926;\n          break;\n        case NoiseType.BROWN:\n          // ブラウンノイズ生成処理\n          impulseL[i] = (b[0] + 0.02 * Reverb.whiteNoise()) / 1.02;\n          b[0] = impulseL[i];\n          impulseR[i] = (b[1] + 0.02 * Reverb.whiteNoise()) / 1.02;\n          b[1] = impulseR[i];\n\n          // ゲイン補償処理\n          impulseL[i] *= 3.5;\n          impulseR[i] *= 3.5;\n          break;\n      }\n      // 音を減衰させる\n      impulseL[i] *= (1 - n / duration) ** this._options.decay;\n      impulseR[i] *= (1 - n / duration) ** this._options.decay;\n    }\n\n    // インパルス応答のバッファに生成したWaveTableを代入\n    impulse.getChannelData(0).set(impulseL);\n    impulse.getChannelData(1).set(impulseR);\n\n    this.convolverNode.buffer = impulse;\n  }\n  /**\n   * Generate white noise\n   */\n  private static whiteNoise(): number {\n    // TODO: この乱数は本当に偏り無いのだろうか？\n    return Math.random() * 2 - 1;\n  }\n}\n\n/**\n * デフォルト値\n */\nconst optionDefaults: OptionInterface = {\n  noise: 1,\n  decay: 5,\n  delay: 0,\n  reverse: false,\n  time: 3,\n  filterType: 'lowpass',\n  filterFreq: 2200,\n  filterQ: 1,\n  mix: 0.5,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/Reverb.ts\");\n"],"sourceRoot":""}