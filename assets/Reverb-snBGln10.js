/**
 * @logue/reverb
 *
 * @description JavaScript Reverb effect class
 * @author Logue <logue@hotmail.co.jp>
 * @copyright 2019-2025 By Masashi Yoshikawa All rights reserved.
 * @license MIT
 * @version 1.3.16
 * @see {@link https://github.com/logue/Reverb.js}
 */

(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function s(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(i){if(i.ep)return;i.ep=!0;const o=s(i);fetch(i.href,o)}})();const N=1/2**32;class G{float(e=1){return this.int()*N*e}probability(e){return this.float()<e}norm(e=1){return(this.int()*N-.5)*2*e}normMinMax(e,s){const n=this.minmax(e,s);return this.float()<.5?n:-n}minmax(e,s){return this.float()*(s-e)+e}minmaxInt(e,s){e|=0;const n=(s|0)-e;return n?e+this.int()%n:e}minmaxUint(e,s){e>>>=0;const n=(s>>>0)-e;return n?e+this.int()%n:e}}class F extends G{constructor(e){super(),this.rnd=e}float(e=1){return this.rnd()*e}norm(e=1){return(this.rnd()-.5)*2*e}int(){return this.rnd()*4294967296>>>0}}const I=new F(Math.random),p={bins:2,scale:1,rnd:I},b=(t,e,s)=>{const n=new Array(t);for(let i=0;i<t;i++)n[i]=s.norm(e);return n},g=t=>t.reduce((e,s)=>e+s,0);function*x(t,e){const s=[t[Symbol.iterator](),e[Symbol.iterator]()];for(let n=0;;n^=1){const i=s[n].next();if(i.done)return;yield i.value}}function*m(t){const{bins:e,scale:s,rnd:n}={...p,...t},i=b(e,s,n);i.forEach((c,a)=>i[a]=a&1?c:-c);const o=1/e;let r=g(i);for(let c=0,a=-1;;++c>=e&&(c=0))r-=i[c],r+=i[c]=a*n.norm(s),a^=4294967294,yield a*r*o}const T=t=>x(m(t),m(t)),C=t=>{let e=32;return t&=-t,t&&e--,t&65535&&(e-=16),t&16711935&&(e-=8),t&252645135&&(e-=4),t&858993459&&(e-=2),t&1431655765&&(e-=1),e};function*E(t){const{bins:e=8,scale:s,rnd:n}={...p,...t},i=b(e,s,n),o=1/e;let r=g(i);for(let c=0;;c=c+1>>>0){const a=C(c)%e;r-=i[a],r+=i[a]=n.norm(s),yield r*o}}function*y(t){const{bins:e,scale:s,rnd:n}={...p,...t},i=b(e,s,n),o=1/e;let r=g(i);for(let c=0;;++c>=e&&(c=0))r-=i[c],r+=i[c]=n.norm(s),yield r*o}const k=t=>x(y(t),y(t));function*v(t){const{scale:e,rnd:s}={...p,...t};for(;;)yield s.norm(e)}const L=(t,e)=>typeof t?.[e]=="function",O=t=>L(t,"xform")?t.xform():t,j=t=>typeof t?.[Symbol.iterator]=="function",M=t=>t;class h{value;constructor(e){this.value=e}deref(){return this.value}}const S=t=>new h(t),q=t=>t instanceof h,Q=t=>t instanceof h?t:new h(t),w=t=>t instanceof h?t.deref():t,D=(t,e)=>[t,M,e];function P(t){return t?[...t]:D(()=>[],(e,s)=>(e.push(s),e))}function*B(t,e){const s=O(t)(P()),n=s[1],i=s[2];for(let o of e){const r=i([],o);if(q(r)){yield*w(n(r.deref()));return}r.length&&(yield*r)}yield*w(n([]))}const U=(t,e)=>[t[0],t[1],e];function A(t,e){return j(e)?B(A(t),e):s=>{const n=s[2];let i=t;return U(s,(o,r)=>--i>0?n(o,r):i===0?Q(n(o,r)):S(o))}}const R={version:"1.3.16",date:"2025-03-30T16:31:53.018Z"},u={blue:"blue",brown:"red",green:"green",pink:"pink",red:"red",violet:"violet"},W={noise:"white",scale:1,peaks:2,randomAlgorithm:I,decay:2,delay:0,reverse:!1,time:2,filterType:"allpass",filterFreq:2200,filterQ:1,mix:.5,once:!1};class d{static version=R.version;static build=R.date;ctx;wetGainNode;dryGainNode;filterNode;convolverNode;outputNode;options;isConnected;noise=v;constructor(e,s){this.ctx=e,this.options=Object.assign(W,s),this.wetGainNode=this.ctx.createGain(),this.dryGainNode=this.ctx.createGain(),this.filterNode=this.ctx.createBiquadFilter(),this.convolverNode=this.ctx.createConvolver(),this.outputNode=this.ctx.createGain(),this.isConnected=!1,this.filterType(this.options.filterType),this.setNoise(this.options.noise),this.buildImpulse(),this.mix(this.options.mix)}connect(e){return this.isConnected&&this.options.once?(this.isConnected=!1,this.outputNode):(this.convolverNode.connect(this.filterNode),this.filterNode.connect(this.wetGainNode),e.connect(this.convolverNode),e.connect(this.dryGainNode).connect(this.outputNode),e.connect(this.wetGainNode).connect(this.outputNode),this.isConnected=!0,this.outputNode)}disconnect(e){return this.isConnected&&(this.convolverNode.disconnect(this.filterNode),this.filterNode.disconnect(this.wetGainNode)),this.isConnected=!1,e}mix(e){if(!d.inRange(e,0,1))throw new RangeError("[Reverb.js] Dry/Wet ratio must be between 0 to 1.");this.options.mix=e,this.dryGainNode.gain.value=1-this.options.mix,this.wetGainNode.gain.value=this.options.mix}time(e){if(!d.inRange(e,1,50))throw new RangeError("[Reverb.js] Time length of inpulse response must be less than 50sec.");this.options.time=e,this.buildImpulse()}decay(e){if(!d.inRange(e,0,100))throw new RangeError("[Reverb.js] Inpulse Response decay level must be less than 100.");this.options.decay=e,this.buildImpulse()}delay(e){if(!d.inRange(e,0,100))throw new RangeError("[Reverb.js] Inpulse Response delay time must be less than 100.");this.options.delay=e,this.buildImpulse()}reverse(e){this.options.reverse=e,this.buildImpulse()}filterType(e="allpass"){this.filterNode.type=this.options.filterType=e}filterFreq(e){if(!d.inRange(e,20,2e4))throw new RangeError("[Reverb.js] Filter frequrncy must be between 20 and 20000.");this.options.filterFreq=e,this.filterNode.frequency.value=this.options.filterFreq}filterQ(e){if(!d.inRange(e,0,10))throw new RangeError("[Reverb.js] Filter Q value must be between 0 and 10.");this.options.filterQ=e,this.filterNode.Q.value=this.options.filterQ}peaks(e){this.options.peaks=e,this.buildImpulse()}scale(e){this.options.scale=e,this.buildImpulse()}randomAlgorithm(e){this.options.randomAlgorithm=e,this.buildImpulse()}setNoise(e){switch(this.options.noise=e,e){case u.blue:this.noise=m;break;case u.green:this.noise=T;break;case u.pink:this.noise=E;break;case u.red:case u.brown:this.noise=y;break;case u.violet:this.noise=k;break;default:this.noise=v}this.buildImpulse()}setRandomAlgorythm(e){this.options.randomAlgorithm=e,this.buildImpulse()}static inRange(e,s,n){return(e-s)*(e-n)<=0}buildImpulse(){const e=this.ctx.sampleRate,s=Math.max(e*this.options.time,1),n=e*this.options.delay,i=this.ctx.createBuffer(2,s,e),o=new Float32Array(s),r=new Float32Array(s),c=this.getNoise(s),a=this.getNoise(s);for(let l=0;l<s;l++){let f=0;l<n?(o[l]=0,r[l]=0,f=this.options.reverse??!1?s-(l-n):l-n):f=this.options.reverse??!1?s-l:l,o[l]=(c[l]??0)*(1-f/s)**this.options.decay,r[l]=(a[l]??0)*(1-f/s)**this.options.decay}i.getChannelData(0).set(o),i.getChannelData(1).set(r),this.convolverNode.buffer=i}getNoise(e){return[...A(e,this.noise({bins:this.options.peaks,scale:this.options.scale,rnd:this.options.randomAlgorithm}))]}}export{d as R};
